---
dist: xenial
sudo: required

services:
  - docker

notifications:
  email:
    on_success: change
    on_failure: always
  slack:
    on_success: always
    on_failure: always
    rooms:
      secure: "g2j8EBAPTzk5tMry9O7BqQWhwHi2JFhjj7r6wDtm4cYLJNG21p67JTiwCpjK+VT\
               YHCabw096UXUGy7yzW0KBokap+y0Jz1eCvDH9fW6XD4TM5NYbONJBLaV/nndV81\
               6zWMdiDwfTJOP1WKTuPA1j1TSghJ/jAKr+uM2r6vP/qUFLQeVL6pabRagbVm0Yh\
               zvQFvUISOE8J1iolRDH3pIcg0Q+LNjuzDiKskZGkstNDkiN30Emy2SngKRSJCIa\
               foGQgglNH2KGuhwIWph2+LzMKvTdpELIu7s2FH+I5EHBPNJqRlPxRAh9fqhkaBl\
               FtAfX3EOabMdaPiQssDa75T6KSZqmGQ0/h9mIkxojvpiu58F/bG9nRPOO5gQbm7\
               kuxNV8adOvRxTzSm6PSkpV/G0TxVd45wULHIgfwY6OykHuNsJ4B9PCRt0Vo4kCq\
               J/RH7YHyAacLc6AqIWQsuqGgaZwPmzKCX0MyFpc/QT9QtlF0jUN9qKIpAAJC1z+\
               LB39C++aHSQfALSS5OaQ6phDmnPj+NQsWXO9wzADnkcy0Q66grzxpAOwSp7yV9a\
               NM5P/24BaFaA48qOhQNFNu90jLYnWvH9stJ9CtV/8uSFbxcVr054Wjol0RI/j1a\
               4h6Hf5HfuqulEbYClOGCbMUtNcmmdgSB0zO9Zlp2+OHfHMXYs6bjM="

language: python
python:
  - 3.6

cache:
  pip: true
  directories:
    - "$HOME/docker"

git:
  submodules: false

addons:
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable

before_install:
  - openssl enc -aes-256-cbc -md sha256 -k ${secret_pwd} -in secret_vm.enc -out secret_vm -d
  - 'echo "options timeout:5"  | sudo tee -a /etc/resolvconf/resolv.conf.d/tail'
  - 'echo "options attempts:5" | sudo tee -a /etc/resolvconf/resolv.conf.d/tail'
  - sudo service resolvconf restart
  - sudo apt-add-repository -y ppa:ansible/ansible-2.9
  - sudo apt -q update
  - sudo apt -y install ansible bridge-utils
  - sudo adduser travis docker
  - sudo pip2 install --upgrade jinja2
  - pip install yamllint jinja2 pyyaml selenium
  - |
    # load docker images from cache
    if [ -d $HOME/docker ]; then
      for f in $HOME/docker/*.tar.gz;
      do
        echo "Loading '$f' into docker";
        #zcat "$f" | docker load || true;
      done;
    fi
  - curl -q https://chromedriver.storage.googleapis.com/`curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip | zcat > scripts/chromedriver

script:
  - ./scripts/travis_tests

after_script:
  - shred secret_vm

after_failure:
  - "ansible -v -i environments/vm/inventory --become 'all' \
             -m command -a '/bin/journalctl -x -n100'"
  - "ansible -v -i environments/vm/inventory --become 'all' \
             -m command -a '/bin/netstat -nlptu'"
  - "ansible -v -i environments/vm/inventory --become 'lb' \
             -m command -a '/usr/bin/tail -n 100 /var/log/haproxy.log'"
  - "ansible -v -i environments/vm/inventory --become 'sbs' \
             -m command \
             -a '/usr/bin/tail -n 100 /opt/sbs/sbs/log/sbs.log /opt/sbs-/sbs/log/sbs_debug.log'"
  - "ansible -v -i environments/vm/inventory --become 'sbs' \
             -m command \
             -a '/usr/bin/tail -n 100 /var/log/apache2/access.log /var/log/apache2/error.log'"

before_cache:
  - "ls -la $HOME/docker"
  - |
    # save docker images to cache
    export IMG=$( docker images --format '{{.ID}}' scz-base );
    echo "scz-image is id ${IMG}";
    if ! [ -e $HOME/docker/$IMG.tar.gz ]; then
      echo "scz-base image has changed, clearing out cache and writing new image"
      rm -rf $HOME/docker;
      mkdir -p $HOME/docker;
      docker save scz-base | gzip -c6 > $HOME/docker/${IMG}.tar.gz;
    else
      echo "scz-base image exists; nothing to do"
    fi
  - "ls -la $HOME/docker"

env:
  global:
    - secret_pwd:
        secure: "VZrNd6U95m5FyPZcj4TuVZhypyX4LJYeFAeIocP/j8V90Q8XYKRRtcmslum4H\
                 YbUezcF8j2QBptoLU7+DFDX4EzsR5KqSPzz45FZRinNNfvCmS74DSBf3URn0v\
                 etEW96+J6O7e68hJMUF4CEy2aGRBTiV2xTj3B3kB0P42ybOusQ+EkdrjJP5T2\
                 FEbDpQsfuupLq4byra3BSEXPTR/IWjrFOCgsJrB3/BIbhlvWtsNSczVX5Hld9\
                 u+RPcO6de8e7ky2/YabDx9Jf1R0QUHJ/LSDAYpiyqzOfEkhUczfShNz8hdHra\
                 PrYMUKy8ppX55jrrfMrOF4jImH8gqyie8+8a6dxpXfiqQqWloWdYBvfe/eWAj\
                 coDq8nqmEx6iWOXpjS0TXV+8NsakASBiGRWn+NHWFsm775yztKNVJS8Ks2Tfo\
                 Myt1qKFCjxg+GHz+nkCG/GkkSXpr36Kxm9Rq0BROkhIvbMHkRgrVtyy6IsZed\
                 6RORAp9e+VSvc8MIQLa1X0Pdckrvsp1bRoGpoPKAHUf4DvXuri/SfLjm1cCM+\
                 kQ7l/FW+Mhjtb8/sEiLLNva/SeCP4NMZkv7Zz5Rhi9R0inwdDeq/ATErewrCR\
                 g2KF7TlPki9gFtv77dNpKDIlQqBHQgkoSGSVXHCbciO1FhsOsOfPXoGX6/Y5H\
                 bQ/LAwG76DBQ="
