# vim:ts=2:sw=2:expandtab
---
- hosts: all
  serial: 20
  gather_facts: false
  tasks:
    - name: Read vars from secrets file
      include_vars: "{{ item }}"
      with_items: "{{ secrets_files }}"
      tags: always

# first gather facts from all hosts that we're actually deploying to
- hosts: all
  become: yes
  serial: 20
  gather_facts: true

# to run the debug target, specify --extra-vars="debug=true" / -e debug=1
- hosts: all
  gather_facts: false
  roles:
    - role: debug
      tags: ['debug']
      when: "debug | default('false') | bool"

- hosts: all
  serial: 20
  roles:
    - { role: basic,         tags: ['common','basic']    }
    - { role: apt,           tags: ['common','apt']      }
    - { role: firewall,      tags: ['common','firewall'] }
    - { role: ntp,           tags: ['common','ntp']      }
    - { role: users,         tags: ['common','users']    }
    - { role: mail,          tags: ['common','mail']     }
    - { role: syslog-client, tags: ['common','syslog']   }
    - { role: backups,       tags: ['common','backups']  }
    - { role: zabbix-agent,  tags: ['common','zabbix']   }

- hosts: mgnt1
  roles:
    - { role: dns-master,    tags: ['test'] }

- hosts: mgnt2
  roles:
    - { role: syslog-server,   tags: ['syslog'] }

- hosts:
    - lb
  roles:
    #- role: http_nginx
      #tags: ['tls','http_nginx']
    - role: tls_letsencrypt
      tags: ['tls','tls_letsencrypt']
      when: enable_https and not use_fixed_cert
    - role: tls_fixed_cert
      tags: ['tls','tls_fixedcert']
      when: enable_https and use_fixed_cert

- hosts: lb
  roles:
    - { role: https_haproxy,   tags: ['lb','haproxy'] }

- hosts: db
  roles:
    - { role: db_server,        tags: ['db', 'db-server'] }

- hosts: client
  roles:
    - { role: client-base,          tags: ['client','client-base'  ] }
    - { role: client-saml-sp,       tags: ['client','client-sp'    ] }
    - { role: client-saml-idp,      tags: ['client','client-idp'   ] }
    - { role: client-google-idp,    tags: ['client','client-google'] }
    - { role: client-orcid-idp,     tags: ['client','client-orcid' ] }
    - { role: client-microsoft-idp, tags: ['client','client-ms'    ] }
    - { role: client-oidc-rp,       tags: ['client','client-rp'    ] }

- hosts: proxy
  roles:
    - { role: pyff,          tags: ['proxy','pyff'          ] }
    - { role: satosa,        tags: ['proxy','satosa'        ] }
#   - { role: cmservice,     tags: ['proxy','cmservice'     ] }
#   - { role: proxy_mysql,   tags: ['proxy','mysql','dothis'] }

#- hosts: comanage
#  roles:
#   - { role: ldap_master,      tags: ['ldap', 'ldap-master'] }
#   - { role: ldap,             tags: ['ldap'               ] }
#   - { role: http_apache,      tags: ['comanage', 'web'    ] }
#   - { role: comanage_mysql,   tags: ['comanage', 'db'     ] }
#   - { role: php,              tags: ['comanage', 'web'    ] }
#   - { role: auth_mellon,      tags: ['comanage', 'web'    ] }
#   - { role: comanage,         tags: ['comanage', 'web'    ] }
#   - { role: comanage_idp,     tags: ['comanage', 'web'    ] }
#   - { role: comanage_enable,  tags: ['comanage', 'web'    ] }
#   - { role: comanage_plugins, tags: ['comanage', 'web'    ] }

- hosts: ldap
  roles:
    - { role: ldap_services,      tags: ['ldap', 'ldap-services' ] }
    - { role: ldap,               tags: ['ldap'                  ] }
    - { role: plsc,               tags: ['ldap', 'ldap-plsc'     ] }
    - { role: pam_websso_daemon,  tags: ['client','websso-daemon'] }
#   - { role: slp,                tags: ['slp'                   ] }

- hosts: meta
  roles:
    - { role: http_dummy,  tags: ['meta','http'    ] }
    - { role: metadata,    tags: ['meta','metadata'] }

- hosts: sbs
  roles:
    - { role: sbs,     tags: ['sbs']  }

- hosts: vm-sandbox
  roles:
    - { role: mod_mellon,         tags: ['sandbox','mod_mellon'   ] }
    - { role: pam_websso,         tags: ['client','pam-websso'    ] }
    - { role: nextcloud,          tags: ['sandbox','nextcloud'    ] }

- hosts: sandbox
  roles:
    - { role: mod_mellon,         tags: ['sandbox','mod_mellon'   ] }
    - { role: tls_letsencrypt,    tags: ['tls','tls_letsencrypt'],     when: enable_https and not use_fixed_cert }
    - { role: tls_fixed_cert,     tags: ['tls','tls_fixedcert'],       when: enable_https and use_fixed_cert }
    - { role: docker,             tags: ['sandbox','docker'       ] }
    - { role: pam_websso_daemon,  tags: ['sandbox','websso-daemon'] }
    - { role: wordpress,          tags: ['sandbox','wordpress'    ] }
    - { role: nextcloud,          tags: ['sandbox','nextcloud'    ] }
    - { role: ssh_pam,            tags: ['sandbox','ssh'          ] }
    - { role: tls_letsencrypt,    tags: ['sandbox','tls','tls_letsencrypt'],  when: enable_https and not use_fixed_cert }
    - { role: tls_fixed_cert,     tags: ['sandbox','tls','tls_fixedcert'],    when: enable_https and use_fixed_cert }

