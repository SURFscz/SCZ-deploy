# vim:ts=2:sw=2:expandtab
---
- hosts: all
  serial: 20
  gather_facts: false
  tags: always
  become: false
  tasks:
    - name: Read user secrets
      include_vars: "{{ secrets_users_file }}"
    - name: Read vars from secrets file
      include_vars: "{{ secrets_file }}"
    - name: Get current datetime
      local_action:
        module: "command"
        cmd: "date -u '+%Y-%m-%dT%H:%M:%S%z'"
      register: datetime_now
      changed_when: false
    - name: Get local git version of deploy and inventory
      local_action:
        module: "command"
        cmd: "git log --pretty=format:'%h%d' -n1"
        chdir: "{{item}}"
      with_items: ["{{playbook_dir}}","{{inventory_dir}}"]
      register: git_version
      changed_when: false

# first gather facts from all hosts that we're actually deploying to
- hosts: all
  become: yes
  serial: 20
  gather_facts: true

# to run the debug target, specify --extra-vars="debug=true" / -e debug=1
- hosts: all
  gather_facts: false
  roles:
    - role: debug
      tags: ['debug']
      when: "debug | default('false') | bool"

- name: "common"
  hosts: all
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: basic,          tags: ['common','basic']      }
    - { role: apt,            tags: ['common','apt']        }
    - { role: firewall,       tags: ['common','firewall']   }
    - { role: ntp,            tags: ['common','ntp']        }
    - { role: users,          tags: ['common','users']      }
    - { role: mail,           tags: ['common','mail']       }
    - { role: syslog-client,  tags: ['common','syslog']     }
    - { role: backups,        tags: ['common','backups']    }
    - { role: zabbix-agent,   tags: ['common','zabbix']     }
    #- { role: aws-cloudwatch, tags: ['common','cloudwatch'], when: is_aws }
    #- { role: aws-cloudlogs,  tags: ['common','cloudlogs'],  when: is_aws }

#- name: "dns"
#  hosts: mgnt1
#  tasks:
#    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
#  roles:
#    - { role: dns-master,    tags: ['test'] }
#
#- name: syslog
#  hosts: mgnt2
#  tasks:
#    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
#  roles:
#    - { role: syslog-server,   tags: ['syslog'] }

- name: "lb"
  hosts: lb
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: http_nginx,      tags: ['lb','http_nginx']       }
    - { role: tls_letsencrypt, tags: ['lb','tls_letsencrypt'],
        when: enable_https and not use_fixed_cert              }
    - { role: tls_fixed_cert,  tags: ['lb','tls_fixedcert'],
        when: enable_https and use_fixed_cert                  }
    - { role: lb_haproxy,      tags: ['lb','haproxy']          }

- name: "database"
  hosts: db
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: db_server,        tags: ['db', 'db-server'] }

- name: "client"
  hosts: client
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: http_apache,          tags: ['client','client-base'  ] }
    - { role: client-base,          tags: ['client','client-base'  ] }
    - { role: client-saml-sp,       tags: ['client','client-sp'    ] }
    - { role: client-saml-idp,      tags: ['client','client-idp'   ] }
    - { role: client-google-idp,    tags: ['client','client-google'] }
    - { role: client-orcid-idp,     tags: ['client','client-orcid' ] }
    - { role: client-microsoft-idp, tags: ['client','client-ms'    ] }
    - { role: client-oidc-rp,       tags: ['client','client-rp'    ] }
    - { role: oidc-op,              tags: ['client','oidc-op'      ] }
    - { role: client-2fa,           tags: ['client','client-2fa'   ], when: experimental_features }

- name: "proxy"
  hosts: proxy
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: pyff-daemon,   tags: ['proxy','pyff-daemon'   ] }
    - { role: satosa,        tags: ['proxy','satosa'        ] }

- name: "sbs"
  hosts: sbs
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: http_apache, tags: ['sbs']  }
    - { role: sbs,         tags: ['sbs']  }

- name: "ldap"
  hosts: ldap
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: ldap_services,      tags: ['ldap', 'ldap-services' ] }
    - { role: ldap,               tags: ['ldap'                  ] }
#    - { role: plsc,               tags: ['ldap', 'ldap-plsc'     ] }
#    - { role: pam_websso_daemon,  tags: ['client','websso-daemon'], when: experimental_features }

- name: "first ldap"
  hosts: ldap[0]
  roles:
#    - { role: plsc,               tags: ['ldap', 'ldap-plsc'     ] }

- name: "meta"
  hosts: meta
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: pyff-metadata, tags: ['meta','pyff-metadata']}
    - { role: http_dummy,    tags: ['meta','http'    ]     }
    - { role: metadata,      tags: ['meta','metadata']     }

- name: "sandbox"
  hosts: sandbox1
  tasks:
    - { import_tasks: "tasks/versions.yml", tags: ['common'] }
  roles:
    - { role: pam_websso,         tags: ['client','pam-websso'], when: experimental_features }
