# vim:ts=2:sw=2:expandtab
---
- hosts: all
  tasks:
    - name: Read vars from secrets file
      include_vars: "{{ secrets_file }}"
      tags: always
      check_mode: "no"

# looks hackish, but this is apparently the "a clean, official way" to gather
# required facts from all hosts, regardless of the commandline --limit
# parameter
# We need this here, because in the group vars, we rely on the hostvars for
# the ip addresses of other hosts (e.g, mgnt1)
- hosts: all
  pre_tasks:
    - name: Gather facts from mgnt hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{item}}"
      delegate_facts: "true"
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{groups['all']}}"
      tags: always

#- hosts: all
#  roles:
#    - { role: debug,    tags: ['debug'] }

- hosts: all
  roles:
    - { role: basic,    tags: ['common'] }
    - { role: apt,      tags: ['common','apt']      }
    - role: firewall
      tags: ['common','firewall']
      when: docker is not defined or docker.stdout_lines[0] != "docker"
    - role: ntp
      tags: ['common']
      when: docker is not defined or docker.stdout_lines[0] != "docker"
    - { role: users,    tags: ['common','users'] }
    - { role: mail,     tags: ['common','mail'] }
    - { role: syslog-client, tags: ['common','syslog'    ] }

- hosts: mgnt1
  roles:
  #  - { role: ldap, tags: ['ldap'] }
  #  - { role: mta,  tags: ['mta' ] }

- hosts: mgnt2
  roles:
    - { role: syslog-server,   tags: ['syslog'] }

- hosts: lb
  roles:
    - { role: http_nginx,      tags: ['lb','http_nginx'] }
    - { role: tls_letsencrypt, tags: ['lb','tls_letsencrypt'] }
    - { role: https_haproxy,   tags: ['lb','https_haproxy'] }

- hosts: comanage
  roles:
    - { role: http_apache, tags: ['comanage', 'web'] }
    - { role: mysql, tags: ['comanage', 'db'] }
    - { role: comanage_mysql, tags: ['comanage', 'db'] }
    - { role: php56, tags: ['comanage', 'web'] }
    - { role: auth_mellon, tags: ['comanage', 'web'] }
    - { role: comanage, tags: ['comanage', 'web'] }
    - { role: comanage_idp, tags: ['comanage', 'web'] }
    - { role: comanage_enable, tags: ['comanage', 'web'] }
    - { role: comanage_plugins, tags: ['comanage', 'web'] }

- hosts: ldap
  roles:
    - { role: ldap, tags: ['ldap'] }

- hosts: proxy
  roles:
    - { role: satosa,      tags: ['proxy','satosa'    ] }
    - { role: pyff,        tags: ['proxy','pyff'      ] }
    - { role: cmservice,   tags: ['proxy','cmservice' ] }
    - { role: mysql,       tags: ['proxy','mysql'     ] }
    - { role: proxy_mysql, tags: ['proxy','mysql'     ] }

- hosts: meta
  roles:
    - { role: http_dummy,  tags: ['http']      }
    - { role: metadata,    tags: ['metadata']  }

- hosts: client
  roles:
    - { role: clients,     tags: ['clients']    }
