#!{{ satosa_env_dir }}/bin/python
from pymongo import MongoClient
import json
import sys
import os

if len(sys.argv) < 2:
    sys.exit("%s <clients.d>" % sys.argv[0])

client = MongoClient("mongodb://localhost:27017")
db = client['satosa']
mongo_coll = db['clients']
location = sys.argv[1]
file_coll = {}

for source in os.listdir(location):
    with open("{}/{}".format(location,source)) as clients:
        file_coll.update(json.load(clients))

# Debug collected clients
print("clients: {}".format(json.dumps(file_coll, indent=2)))

# Insert new clientID's (or update if different)
print("Inserting ID's")
for clientid, value in file_coll.items():
    cursor = mongo_coll.find({"lookup_key": clientid})
    if (cursor.count() == 0):
        print(clientid)
        doc = {
            "lookup_key" : clientid,
            "data" : value
        }
        mongo_coll.insert_one(doc)
    elif (cursor.next()["data"] != value):
        print("Update " + clientid)
        mongo_coll.update_many({ "lookup_key": clientid }, { "$set": { "data": value } } )

# removed for now, to make OIDC clients persistent
# see https://www.pivotaltracker.com/story/show/157655246
## Cleanup removed ID's
#print("Removing ID's")
#cursor = mongo_coll.find({})
#for doc in cursor:
#    clientid = doc["lookup_key"]
#    if clientid not in file_coll:
#        print(clientid)
#        mongo_coll.delete_many({'lookup_key': clientid})


