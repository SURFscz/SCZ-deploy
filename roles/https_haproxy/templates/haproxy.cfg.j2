global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base {{letsencrypt.cert_dir}}

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA
	ssl-default-bind-options no-sslv3 no-tlsv10
{% if haproxy.custom_dhparam %}
	ssl-dh-param-file {{haproxy.dhparam_file}}
{% else %}
	tune.ssl.default-dh-param {{haproxy.dhparam_keysize}}
{% endif %}

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#--------------------------------------------------------------------
#  frontend 
# -------------------------------------------------------------------
frontend ssl_ip
	bind    *:443 ssl {% for host in loadbalancer %}crt {{letsencrypt.cert_dir}}/{{host.hostname}}/priv+fullchain.pem{% endfor %} no-sslv3 transparent
	bind [::]:443 ssl {% for host in loadbalancer %}crt {{letsencrypt.cert_dir}}/{{host.hostname}}/priv+fullchain.pem{% endfor %} no-sslv3 transparent

	http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
	http-response set-header Content-Security-Policy   "default-src 'self'; frame-src 'none'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content;"
	http-response set-header X-Frame-Options "DENY"
	http-response set-header X-XSS-Protection "1; mode=block"
	http-response set-header X-Content-Type-Options "nosniff"

{% for host in loadbalancer %}
	acl acl_{{host.hostname}} ssl_fc_sni -i {{host.hostname}}
	use_backend be_{{host.hostname}} if acl_{{host.hostname}}
{% endfor %}

{% for host in loadbalancer %}
backend be_{{host.hostname}}
	{% for be_server in host.backend_hosts -%}
	server {{host.hostname}} {{be_server}}:{{host.backend_port}} check
	{%- endfor %}
{% endfor %}
