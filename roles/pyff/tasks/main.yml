---
- name: Ensure that packages are installed
  apt:
    name:
      - build-essential
      - git
      - xmlsec1
      - python2.7
      - python-dev
      - python-setuptools
      - python-pip
    state: present

- name: install python virtualenv
  pip:
    name: virtualenv
    executable: pip
  notify: "pyff changed"

- name: create pyFF user
  user:
    name: pyff
    shell: "/bin/false"
    state: present

- name: Create project directory
  file:
    path: "{{ pyff_project_dir }}"
    state: directory
    mode: 0755
    owner: pyff

- name: Create metadata directory
  file:
    path: "{{ pyff_metadata_dir }}"
    state: directory
    mode: 0755
    owner: pyff

# requirements.txt can be generated from virtualenv/bin/pip freeze
- name: Generate requirements.txt.j2 from template
  template:
    src: "requirements.txt.j2"
    dest: "{{ pyff_project_dir }}/requirements.txt"

- name: Install pyFF from requirements.txt
  pip:
    requirements: "{{ pyff_project_dir }}/requirements.txt"
    virtualenv: "{{ pyff_env_dir }}"
    virtualenv_python: python2
  notify: "pyff changed"
  become: "yes"
  become_user: pyff

- name: Create certs directory
  file:
    path: "{{ pyff_env_dir }}/certs"
    state: directory
    mode: 0755

- name: create self-signed Metadata Signing SSL certs
  shell: >
    openssl genrsa -out "{{ pyff_env_dir }}/certs/{{ item }}.key" 2048;
    openssl req -new -nodes -x509 -subj "/C=NL/CN={{ item }}"
    -days 3650 -key "{{ pyff_env_dir }}/certs/{{ item }}.key"
    -out "{{ pyff_env_dir }}/certs/{{ item }}.crt" -extensions v3_ca
  args:
    creates: "{{ pyff_env_dir }}/certs/{{ item }}.crt"
  with_items:
    - signing
  notify: "pyff changed"
  when: metadata_signing_cert is not defined

- name: write fixed Metadata signing certificates
  copy:
    dest: "{{ pyff_env_dir }}/certs/{{ item.key }}"
    content: "{{item.value}}"
    owner: pyff
    mode: 0644
  with_dict:
    signing.key: "{{metadata_signing_cert.priv}}"
    signing.crt: "{{metadata_signing_cert.pub}}"
  notify: "pyff changed"
  when: metadata_signing_cert is defined

- name: protect secret key
  file:
    dest: "{{ pyff_env_dir }}/certs/signing.key"
    mode: 0600
