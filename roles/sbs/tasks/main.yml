---

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

- name: Remove any existing Docker packages
  apt:
    state: absent
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
    state: present

- name: install Docker key
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

- name: Install docker-ce packages
  apt:
    update_cache: yes
    name:
      - docker-ce

- name: Download latest Docker Compose
  get_url:
    url: "{{ docker_compose_latest }}"
    dest: /usr/local/bin/docker-compose
    mode: 0755

- name: Create SBS docker compose directory
  file:
    path: "{{ sbs_workdir }}"
    state: directory
    mode: 0755

- name: Create SBS docker compose directories
  file:
    path: "{{ sbs_workdir }}/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - etc
    - server/config
    - server/migrations
    - log
    - data

- name: Copy docker-compose.yml file from template
  template:
    src: "{{ item }}.j2"
    dest: "{{ sbs_workdir }}/{{ item }}"
  with_items:
    - docker-compose.yml
    - sbs.service

- name: Copy sbs.service in /etc/systemd/system
  copy:
    src: "{{ sbs_workdir }}/sbs.service"
    dest: /etc/systemd/system/sbs.service
    remote_src: yes

- name: Copy etc templates
  template:
    src: "{{ item }}.j2"
    dest: "{{ sbs_workdir }}/{{ item }}"
  with_items:
    - "etc/alembic.env"
    - "etc/config.env"
    - "etc/init.sql"
    - "etc/mysql.cnf"
    - "etc/nginx.conf"

- name: Build dockers
  shell: /usr/local/bin/docker-compose up --no-start
  args:
    chdir: "{{ sbs_workdir }}"

