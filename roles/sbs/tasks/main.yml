---
- name: Install required packages
  apt:
    state: present
    name:
      - yarnpkg
      - nodejs
      - build-essential
      - python3
      - python3-dev
      - python3-virtualenv
      - python3-setuptools
      - python-setuptools
      - python-pymysql
      - virtualenv
      - python3-distutils
      - libapache2-mod-wsgi-py3

- name: enable Apache modules
  apache2_module:
    state: present
    name: "{{item}}"
    ignore_configcheck: true
  with_items:
    - rewrite
    - headers
    - wsgi
    - ssl
  notify: restart Apache

- name: Configure Apache vhost
  template:
    src: sbs.conf.j2
    dest: /etc/apache2/sites-enabled/sbs.conf
  notify: restart Apache

- name: Initialialize database
  throttle: 1
  block:
    - name: Add SBS database
      mysql_db:
        login_host: '{{ db_host }}'
        login_user: '{{ db_admin_user }}'
        login_password: '{{ db_admin_password }}'
        name: '{{ sbs_db_name }}'
        encoding: utf8

    - name: Add SBS user
      mysql_user:
        login_host: '{{ db_host }}'
        login_user: '{{ db_admin_user }}'
        login_password: '{{ db_admin_password }}'
        name: '{{ sbs_db_user }}'
        host: '{{ ansible_default_ipv4.address }}'
        password: '{{ sbs_db_password }}'
        priv: '{{ sbs_db_name }}.*:ALL,REQUIRESSL'
      changed_when: false

- name: Clone SBS repository
  git:
    repo: "{{ sbs_repository }}"
    dest: "{{ sbs_git_dir }}"
    version: "{{ sbs_version }}"
  notify: reload Apache
  register: git_apps

- name: Add git info to server
  shell: git --git-dir {{ sbs_git_dir }}/.git  log -1 > {{ sbs_git_dir }}/server/api/git.info
  changed_when: false

- name: Create python3 virtualenv
  pip:
    virtualenv: "{{ sbs_env_dir }}"
    virtualenv_python: python3
    requirements: "{{ sbs_git_dir }}/server/requirements/test.txt"
  notify: restart Apache

- name: check for yarn dependencies
  stat:
    path: "{{ sbs_git_dir }}/client/node_modules"
  register: yarn_deps

- name: Install yarn dependancies
  yarn:
    executable: "/usr/bin/yarnpkg"
    path: "{{ sbs_git_dir }}/client"
  register: yarn_install
  when: git_apps.changed or not yarn_deps.stat.exists

- name: Build client yarn
  command:
    cmd: "yarnpkg --pure-lockfile build"
    chdir: "{{ sbs_git_dir }}/client"
  when: git_apps.changed or yarn_install.changed

# yarn install modifies yarn.lock (ARGRGRGR), which dirties the repository and
# causes git pulls to fail, so clean up yarn's mess manually
- name: Clear up yarn crap
  command:
    cmd: "git checkout client/yarn.lock"
    chdir: "{{ sbs_git_dir }}"
  when: yarn_install.changed
  changed_when: true

- name: Create SBS config file
  template:
    src: config.yml.j2
    dest: "{{ sbs_git_dir }}/server/config/config.yml"
  notify: restart Apache

- name: Create SBS wsgi file
  template:
    src: sbs-api.wsgi.j2
    dest: "{{ sbs_git_dir }}/sbs-api.wsgi"
  notify: restart Apache

- name: Create SBS environment disclaimer file
  template:
    src: disclaimer.css.j2
    dest: "{{ sbs_git_dir }}/server/static/disclaimer.css"

- name: Copy static files to apache document root
  copy:
    src: "{{ sbs_git_dir }}/server/static/"
    dest: "{{ sbs_git_dir }}/client/build/static"
    remote_src: yes

- name: touch sbs.log file
  file:
    path: /opt/sbs/sbs/log
    state: directory
    owner: www-data
    group: www-data
    mode: 0755

- name: Comment MinProtocol in openssl.conf on dockers
  replace:
    path: /etc/ssl/openssl.cnf
    regexp: '(^MinProtocol.*)'
    replace: '#\1'
  when: not is_aws and use_fixed_cert

- name: Remove obsolete packages
  apt:
    state: absent
    name:
      - libapache2-mod-auth-openidc
  notify: restart Apache

