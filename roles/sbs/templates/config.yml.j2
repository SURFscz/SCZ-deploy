database:
  uri: "mysql+pymysql://{{ sbs_db_user }}:{{ sbs_db_password }}@{{ db_host }}/{{ sbs_db_name }}"

secret_key: {{ sbs_db_secret }}

# Valid scopes are "READ" and "WRITE"
api_users:
  {% for name, user in sbs_api_users.items() %}
  - name: "{{ name }}"
      password: "{{ user.password }}"
      scopes: [ {{ user.scopes|join(', ') }} ]
  {% endfor %}

oidc_id: "{{ sbs_uid_attribute }}"
oidc_prefix: "OIDC_CLAIM_"
oidc_uppercase: False
voperson_application_uid: "voperson_application_uid"
eduperson_principal_name: "eduperson_principal_name"

base_scope: "{{ base_domain }}"
entitlement_group_namespace: "{{ sbs_urn_namespace }}"
collaboration_creation_allowed_entitlement: "urn:mace:surf.nl:sram:allow-create-co"

# All services in the white list can be requested in the create-restricted-co API
# The default organisation is a fallback for when the administrator has no schac_home_org
restricted_co:
  services_white_list: ["https://cloud"]
  default_organisation: "{{ sbs_restricted_co_default_org }}"

mail:
  host: {{ sbs_mail_host }}
  port: {{ sbs_mail_port }}
  sender_name: {{ sbs_mail_sender_name }}
  sender_email: {{ sbs_mail_sender_email }}
  suppress_sending_mails: False
  info_email: scz-support@surfnet.nl

aup:
  pdf: SURFresearch-Access-Management-AUP-01122019-0001.pdf
  pdf_link: "{{ sbs_base_url }}static/SURFresearch-Access-Management-AUP-01122019-0001.pdf"
  html: SURFresearch-Access-Management-AUP-01122019-0001.html

base_url: {{ sbs_base_url }}
wiki_link: {{ sbs_wiki_link }}

admin_users:
  {% for admin_user in sbs_admin_users %}
  - uid: "{{ admin_user.uid }}"
  {% endfor %}

feature:
  admin_users_upgrade: False
  admin_users_upgrade_url: "{{ sbs_base_url }}api/users/upgrade_super_user"
  admin_users_upgrade_redirect_url: {{ sbs_base_url }}

# The retention config determines how long users may be inactive, how long the reminder email is valid and when do we resent the magic link
retention:
  allowed_inactive_period_days: 90
  reminder_expiry_period_days: 14
  reminder_resent_period_days: 7
