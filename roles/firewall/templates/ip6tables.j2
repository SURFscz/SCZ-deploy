# IPv6 firewall configuration

*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT


# generated from group config firewall_v6_incoming
{%  if firewall_v6_incoming is defined %}
{%- for l in firewall_v6_incoming      %}
{{'# '}}{{l.name}}{{"\n"}}
  {#- first check if l.src is a string or a list                    -#}
  {#- if it's a string, convert to a list, so we can iterate safely -#}
  {%- if l.src is defined          -%}
  {%-   if l.src is string         -%}
  {%-     set src = [ l.src ]      -%}
  {%-   elif l.src is mapping      -%}
  {%-     set src = l.src.values() -%}
  {%-   else                       -%}
  {%-     set src = l.src          -%}
  {%-   endif                      -%}
  {%- else                         -%}
  {%-   set src = [False]          -%}
  {%- endif                        -%}
  {#- now loop over all src addreses -#}
  {%- for s in src %}
    {%- if True               -%} -A INPUT                      {%- endif -%}
    {%- if True                %} -p {{l.proto|default('tcp')}} {%- endif -%}
    {%- if s                   %} -s {{s}}                      {%- endif -%}
    {%- if l.sport is defined  %} -m multiport                  {%- endif -%}
    {%- if l.sport is defined  %} --sports {{l.sport}}          {%- endif -%}
    {%- if l.dport is defined  %} -m multiport                  {%- endif -%}
    {%- if l.dport is defined  %} --dports {{l.dport}}          {%- endif -%}
    {%- if True                %} -j ACCEPT                     {%- endif -%}
    {{"\n"}}
  {%- endfor -%}
{%- endfor %}
{%- endif %}

# explicitly add a REJECT rule to prevent timeouts when connecting to ipv6
# note: REJECT is not a valid policy, but can only be used in targets
-A INPUT -j REJECT

COMMIT
