#!/bin/bash
set -e
export TERM=xterm-256color

if [ ! -f docker/ansible_key.pub ]; then
    echo "No ansible key found"
    ssh-keygen -f docker/ansible_key -N ""
fi

# Build single docker image before docker-compose starts
if [ -z "$REENTRANT" ]; then
    scz_image=$(docker image list scz-base -q)
    if [ -z "$scz_image" ]
    then
        echo "Building docker image"
        time docker build -t scz-base --target=scz-base --cache-from=thing-cache docker/
    else
        echo "Docker image found"
    fi
fi

# Bring up the VMs if they're not running
echo "Bringing docker containers up"
./docker/docker-compose.yml.py > ./docker/docker-compose.yml
time docker-compose -f docker/docker-compose.yml up --no-recreate -d

echo "Waiting until containers have booted"
for c in $(docker ps -q)
do
    host=$(docker inspect --format='{{.Config.Hostname}}'     $c)
    printf " - %-10s" $host
    while true
    do
        stat=$(docker inspect --format='{{.State.Health.Status}}' $c)
        if [ "$stat" = "healthy" ]
        then
            tput setaf 2
            echo "OK"
            tput sgr0
            break
        fi
        echo -n "."
        sleep 0.5
    done
done

echo "Starting ansible"
time \
ansible-playbook provision.yml \
    -i ./environments/vm/inventory \
    --extra-vars="secrets_file=environments/vm/secrets/all.yml" \
    --vault-password-file=secret_vm \
    $@

# restart proxy to reload all metadata (chicken finds eggs)
ansible -i ./environments/vm/inventory -m command -a 'systemctl restart pyff' proxy >> /dev/null 2>&1

exit 0
