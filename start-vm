#!/bin/bash
set -e

if [ ! -f docker/ansible_key.pub ]; then
    echo "No ansible key found"
    ssh-keygen -f docker/ansible_key -N ""
    chown 1000:1000 docker/ansible_key.pub
fi

# build single docker image before docker-compose starts
if [ -n "$TRAVIS" -a -z "$REENTRANT" ]
then
    scz_image=$(docker image list scz-base -q)
    if [ -z "$scz_image" ]
    then
        echo "Building docker image"
        time docker build -t scz-base --target=scz-base docker/
    else
        echo "Docker image found"
    fi
fi

# bring up the VMs if they're not running
echo "Bringing docker containers up"
time docker-compose -f docker/docker-compose.yml up -d

# echo "See if dockers are running"
# docker-compose -f docker/docker-compose.yml ps

echo "travis id test"
id

echo "Chmod docker directory"
chmod 0700 /home/travis/build/SURFscz/SCZ-deploy/environments/vm/../../docker

echo "Check Ansible key"
ls -nla /home/travis/build/SURFscz/SCZ-deploy/environments/vm/../../docker

echo "Check Ansible ssh command"
ssh -vvv -o ControlMaster=auto -o ControlPersist=3600s -o 'IdentityFile="/home/travis/build/SURFscz/SCZ-deploy/environments/vm/../../docker/ansible_key"' \
-o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no \
-o User=ansible -o ConnectTimeout=10 -o StrictHostKeyChecking=false 172.20.1.22 \
'/bin/sh -c "sudo -H -S -n -u root /bin/sh -c hostname"'

echo "Starting ansible"
time \
ansible-playbook provision.yml \
    -i ./environments/vm/inventory \
    --extra-vars="secrets_file=environments/vm/secrets/all.yml" \
    $@

# restart proxy to reload all metadata (chicken finds eggs)
ansible -i ./environments/vm/inventory -m command -a 'systemctl restart pyff' proxy >> /dev/null 2>&1

exit 0
