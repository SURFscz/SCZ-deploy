#!/bin/bash
set -e

ENV=test
LOGDIR=logs

mkdir -p $LOGDIR || true

ARG=${1#--}
if [ "$ARG" = "bhr" -o "$ARG" = "beheer" ]
then
    ENV=bhr
    CONF_DIR=./environments/aws_bhr/
    EXTRA="${EXTRA} --ask-vault-pass"
    shift
elif [ "$ARG" = "prd" -o "$ARG" = "prod" ]
then
    ENV=prd
    CONF_DIR=./environments/aws_prd/
    EXTRA="${EXTRA} --ask-vault-pass"
    shift
elif [ "$ARG" = "acc" ]
then
    echo "Not implemented"
    exit 1
elif [ "$ARG" = "tst" -o "$ARG" = "test" ]
then
    echo "Not implemented"
    exit 1
else
    echo "Please specify an environment to deploy (bhr, prod, acc, test)"
    exit 1
fi

LOG=$LOGDIR/deploy-${ENV}.$(date '+%Y%m%d_%H%M').log

SSH_USER=admin
SSH_PRIVKEY=$(realpath .)/../SCZ-terraform/sshkey.priv

# first check that deploy and config repos are clean and are using the same version
# deploy
if ! git diff-index --quiet HEAD --
then
    echo "SCZ-deploy repo is not clean:"
    git status
    exit 1
fi
branch_deploy=$(git symbolic-ref HEAD)

# config
cwd=$(pwd)
cd "$CONFDIR"
if ! git diff-index --quiet HEAD --
then
    echo "Config repo repo is not clean:"
    git status
    exit 1
fi
branch_config=$(git symbolic-ref HEAD)
cd "$cwd"

if [ "$branch_deploy" != "$branch_config" ]
then
    echo "Different version of deploy and config repositories are checks out"
    echo "Deploy branch: '$branch_deploy'"
    echo "Config branch is '$branch_config'"
    exit 1
fi


CMD="ansible-playbook provision.yml \
    -i "$CONF_DIR/inventory" \
    --limit=${ENV} \
    --ask-become \
    --diff \
    --extra-vars="ansible_ssh_private_key_file=$SSH_PRIVKEY" \
    --extra-vars="ansible_ssh_user=$SSH_USER" \
    ${EXTRA} \
    "$@"
"

CMD=$( echo $CMD | sed 's/\s\+/ /g' )

echo "Deploying to SURfscz $ENV..."
echo "Log file: $LOG"
echo "Will execute: $CMD"

stdbuf --output=0 --error=0 $CMD 2>&1 | tee "$LOG"

exit 0
